================================================================================
                   HUGE ACCURACY IMPROVEMENT - ACTION GUIDE
================================================================================

YOUR CURRENT PROBLEM:
  Accuracy: 0.22% ‚ùå
  Root Cause: Success threshold too strict + Loss weights wrong
  Result: Solver2 memory empty (0/2725) - NO LEARNING

================================================================================

SOLUTION: 3 PHASES (Pick ONE)

================================================================================
PHASE 1: QUICK FIX (5 min edit + 30 min training)
================================================================================

Edit: trainloop_gpu_finetuned.py

  Line 294: success_threshold = 1.5

  CHANGE TO: success_threshold = 5.0

  SAVE FILE.

Run:
  python trainloop_gpu_finetuned.py \
    --epochs 1 --max-batches 50 \
    --no-freeze-qwen --agent-lr 1e-4 --device cuda

Expected: Loss 5.0 ‚Üí 3.5, Memory updates > 0, Accuracy 0.5-1%

Time: 30 min
Improvement: 2-5x


================================================================================
PHASE 2: BETTER (10 min edits + 1.5 hours training) ‚≠ê RECOMMENDED
================================================================================

Edit 1: Line 294 (same as Phase 1)
  success_threshold = 1.5  ‚Üí  success_threshold = 5.0

Edit 2: Lines 562-576

  OLD:
    efe_loss = EFELoss(
        lambda_risk=1.0,
        lambda_amb=0.0,
        lambda_step=0.1,
        lambda_cons=1.0,
        lambda_bi=0.5,
        lambda_z=0.2,
        lambda_prompt=0.3,

  NEW:
    efe_loss = EFELoss(
        lambda_risk=0.1,      # Changed: 1.0 ‚Üí 0.1
        lambda_amb=0.0,       # Unchanged
        lambda_step=0.05,     # Changed: 0.1 ‚Üí 0.05
        lambda_cons=2.0,      # Changed: 1.0 ‚Üí 2.0 ‚Üê IMPORTANT
        lambda_bi=0.1,        # Changed: 0.5 ‚Üí 0.1
        lambda_z=0.0,         # Changed: 0.2 ‚Üí 0.0
        lambda_prompt=0.0,    # Changed: 0.3 ‚Üí 0.0

Run:
  python trainloop_gpu_finetuned.py \
    --epochs 5 \
    --no-freeze-qwen --agent-lr 1e-4 --device cuda

Expected: Loss 5.0 ‚Üí 2.0, Memory updates > 500, Accuracy 2-5%

Time: 2.5 hours
Improvement: 10-20x ‚Üê WORTH IT!


================================================================================
PHASE 3: MAXIMUM (20 min coding + 3 hours training)
================================================================================

Create NEW FILE: trainloop_gpu_improved.py
  (Copy from trainloop_gpu_finetuned.py, make these changes)

Change 1: Add import (line ~20)
  from grid_transformation_loss import GridTransformationLoss

Change 2: Replace EFE loss (lines 562-576)

  OLD:
    efe_loss = EFELoss(lambda_risk=1.0, ...)

  NEW:
    efe_loss = GridTransformationLoss(
        shape_weight=0.40,
        pixel_weight=0.45,
        palette_weight=0.10,
        transform_weight=0.05,
        num_colors=10
    ).to(device)

Change 3: Replace loss call (around line 260)

  OLD:
    efe_losses = efe_loss(
        forward_predictions=...,
        backward_predictions=...,
        state_predictions=...,
        observation_probs=...,
        final_prediction=...,
        target_outcome=out,
        episode_length=1,
        prompt_embedding=...,
        grid_mask=None
    )

  NEW:
    efe_losses = efe_loss(
        predictions=solution_grid.squeeze(0),
        target=out,
        input_grid=inp
    )

Change 4: Line 294
  success_threshold = 1.5  ‚Üí  success_threshold = 2.0

Run:
  python trainloop_gpu_improved.py \
    --epochs 5 \
    --no-freeze-qwen --agent-lr 1e-4 --device cuda

Expected: Loss 5.0 ‚Üí 1.0, Memory updates > 1000, Accuracy 5-20%

Time: 3 hours
Improvement: 25-100x ‚Üê BEST!


================================================================================

WHICH PHASE?

  Fast test (30 min)?          ‚Üí  PHASE 1
  Good improvement (1.5 hrs)?  ‚Üí  PHASE 2 ‚≠ê
  Best accuracy (3 hrs)?       ‚Üí  PHASE 3


================================================================================

MY RECOMMENDATION: START WITH PHASE 2

  Why:
  - Balanced effort/reward
  - Uses existing code (minimal risk)
  - 10-20x improvement (2-5% accuracy)
  - If successful, can do Phase 3 later

  Copy/paste:

  EDIT trainloop_gpu_finetuned.py:
    Line 294: success_threshold = 5.0
    Lines 562-576: lambda_risk=0.1, lambda_cons=2.0, lambda_bi=0.1, lambda_z=0.0, lambda_prompt=0.0

  RUN:
    python trainloop_gpu_finetuned.py --epochs 5 --no-freeze-qwen --agent-lr 1e-4 --device cuda

  WAIT 2.5 hours

  EXPECT: 2-5% accuracy (was 0.22%)


================================================================================

VERIFICATION DURING TRAINING

  Look for these signs of success:

  ‚úì Loss decreasing (5.0 ‚Üí 4.0 ‚Üí 3.0 ‚Üí 2.0)
  ‚úì Memory updates > 0 (was 0)
  ‚úì Validation accuracy improving
  ‚úì No NaN or infinity in loss

  If all ‚úì: SUCCESS! Continue to completion.
  If any ‚úó: Try Phase 3 (new loss function) or check for errors.


================================================================================

FILES PROVIDED

  START_HERE_IMPROVEMENTS.md     ‚Üê Quick 3-step guide
  LOSS_FUNCTION_ANALYSIS.md      ‚Üê Why it failed (technical)
  HUGE_IMPROVEMENT_PLAN.md       ‚Üê Full implementation details
  grid_transformation_loss.py    ‚Üê New loss function (for Phase 3)
  SUMMARY_IMPROVEMENTS.md        ‚Üê Technical summary
  ACTION_GUIDE.txt              ‚Üê This file


================================================================================

YOUR KEY INSIGHT WAS CORRECT

  You said: "Focus on grid size and shape differences"

  You were RIGHT! The new GridTransformationLoss does exactly that:
  - Ensures output shape matches (size loss)
  - Ensures correct colors (pixel loss)
  - Uses correct color palette (palette loss)
  - Detects transformation type (transformation loss)


================================================================================

QUICK FACTS

  Current accuracy:        0.22%
  Expected Phase 2:        2-5%     (10-20x better)
  Expected Phase 3:        5-20%    (25-100x better)

  Current loss:            5.1
  Expected Phase 2:        2.0-3.0
  Expected Phase 3:        1.0-1.5

  Current memory updates:  0/2725 (empty!)
  Expected Phase 2:        500+
  Expected Phase 3:        1000+


================================================================================

START NOW!

  Time to start: 5 minutes (Phase 2 edits)
  Time to train: 2.5 hours
  Time to see results: Today!

  Expected accuracy improvement: 10-20x

Ready? Go edit trainloop_gpu_finetuned.py! üöÄ


================================================================================
